using NUnit.Framework;

namespace UnitTesting
{
    [TestFixture]
    public class Tests
    {
        [SetUp]
        public void Setup()
        {
            // Выполнить настройку перед каждым тестом, если необходимо
        }

        [Test]
        public void TestAddition()
        {
            // Arrange (Подготовка данных для теста)
            int a = 5;
            int b = 10;

            // Act (Выполнение действия, которое нужно протестировать)
            int result = a + b;

            // Assert (Проверка результата)
            Assert.AreEqual(15, result, "Сложение чисел должно давать ожидаемый результат");
        }

        [Test]
        public void TestAddition1()
        {
            // Arrange (Подготовка данных для теста)
            int a = 5;
            int b = 10;

            // Act (Выполнение действия, которое нужно протестировать)
            int result = a + b;

            // Assert (Проверка результата)
            Assert.AreEqual(15, result, "Сложение чисел должно давать ожидаемый результат");
        }

        [Test]
        public void TestAddition2()
        {
            // Arrange (Подготовка данных для теста)
            int a = 5;
            int b = 10;

            // Act (Выполнение действия, которое нужно протестировать)
            int result = a + b;

            // Assert (Проверка результата)
            Assert.AreEqual(15, result, "Сложение чисел должно давать ожидаемый результат");
        }

        [Test]
        public void TestAddition3()
        {
            // Arrange (Подготовка данных для теста)
            int a = 5;
            int b = 10;

            // Act (Выполнение действия, которое нужно протестировать)
            int result = a + b;

            // Assert (Проверка результата)
            Assert.AreEqual(15, result, "Сложение чисел должно давать ожидаемый результат");
        }

        [Test]
        public void TestAddition4()
        {
            // Arrange (Подготовка данных для теста)
            int a = 5;
            int b = 10;

            // Act (Выполнение действия, которое нужно протестировать)
            int result = a + b;

            // Assert (Проверка результата)
            Assert.AreEqual(15, result, "Сложение чисел должно давать ожидаемый результат");
        }

        [Test]
        public void TestAddition5()
        {
            // Arrange (Подготовка данных для теста)
            int a = 5;
            int b = 10;

            // Act (Выполнение действия, которое нужно протестировать)
            int result = a + b;

            // Assert (Проверка результата)
            Assert.AreEqual(15, result, "Сложение чисел должно давать ожидаемый результат");
        }

        [Test]
        public void Test()
        {
            // Arrange (Подготовка данных для теста)
            int a = 5;
            int b = 10;

            // Act (Выполнение действия, которое нужно протестировать)
            int result = a + b;

            // Assert (Проверка результата)
            Assert.AreEqual(15, result, "Сложение чисел должно давать ожидаемый результат");
        }

        [Test]
        public void TestAddition6()
        {
            // Arrange (Подготовка данных для теста)
            int a = 5;
            int b = 10;

            // Act (Выполнение действия, которое нужно протестировать)
            int result = a + b;

            // Assert (Проверка результата)
            Assert.AreEqual(15, result, "Сложение чисел должно давать ожидаемый результат");
        }

        [Test]
        public void TestAddition7()
        {
            // Arrange (Подготовка данных для теста)
            int a = 5;
            int b = 10;

            // Act (Выполнение действия, которое нужно протестировать)
            int result = a + b;

            // Assert (Проверка результата)
            Assert.AreEqual(15, result, "Сложение чисел должно давать ожидаемый результат");
        }

        [Test]
        public void TestAddition8()
        {
            // Arrange (Подготовка данных для теста)
            int a = 5;
            int b = 10;

            // Act (Выполнение действия, которое нужно протестировать)
            int result = a + b;

            // Assert (Проверка результата)
            Assert.AreEqual(15, result, "Сложение чисел должно давать ожидаемый результат");
        }

        [Test]
        public void TestAddition9()
        {
            // Arrange (Подготовка данных для теста)
            int a = 5;
            int b = 10;

            // Act (Выполнение действия, которое нужно протестировать)
            int result = a + b;

            // Assert (Проверка результата)
            Assert.AreEqual(15, result, "Сложение чисел должно давать ожидаемый результат");
        }

        [Test]
        public void TestAddition10()
        {
            // Arrange (Подготовка данных для теста)
            int a = 5;
            int b = 10;

            // Act (Выполнение действия, которое нужно протестировать)
            int result = a + b;

            // Assert (Проверка результата)
            Assert.AreEqual(15, result, "Сложение чисел должно давать ожидаемый результат");
        }
    }
}
